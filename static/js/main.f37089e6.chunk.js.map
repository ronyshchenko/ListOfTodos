{"version":3,"sources":["components/todo-list-item/todo-list-item.js","components/item-status-filter/item-status-filter.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","App.js","index.js"],"names":["TodoListItem","important","done","id","edit","label","onToggleDone","onToggleImportant","onDelete","classNamesEdit","onEdit","classNames","isChecked","className","type","onClick","checked","htmlFor","filterButtons","name","ItemStatusFilter","onFilterChange","buttons","map","key","href","TodoList","items","onDeleteAll","count","filter","elements","item","itemProps","countTodo","length","ItemAddForm","state","onLabelChange","e","setState","target","value","onSubmit","preventDefault","props","onItemAdded","this","onChange","placeholder","Component","App","maxId","createItem","toggleProperty","arr","propName","idx","findIndex","slice","onToggleDoneAll","every","i","search","toLowerCase","indexOf","members","visibleItems","filterItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f37089e6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = ({ important, done, id, edit,\r\n      label, onToggleImportant, onToggleDone, onDelete, onEdit}) => {\r\n  // console.log(edit, 'eeee');\r\n  let classNamesEdit = 'edit'      \r\n  let classNames = '';\r\n  let isChecked = false;\r\n  if (important) {\r\n    classNames += 'important';\r\n  }\r\n\r\n  if (edit) {\r\n    classNamesEdit += ' go';\r\n  }\r\n\r\n  if (done) {\r\n    classNames += ' done';\r\n    isChecked = !isChecked;\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"view\">\r\n      <input type=\"checkbox\" className = \"toggle\" \r\n      id={id} onClick={onToggleDone} \r\n      checked = {isChecked}\r\n       />\r\n      <label htmlFor={id} className = {classNames}\r\n      >{label}</label>\r\n      <button type=\"button\" className=\"destroy\" onClick={onDelete}/>\r\n     </div>\r\n    <input type=\"text\" className={classNamesEdit} />\r\n  </>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\n\r\nconst filterButtons = [\r\n  { name: 'all', label: 'All' },\r\n  { name: 'active', label: 'Active' },\r\n  { name: 'done', label: 'Done' }\r\n];\r\n\r\nconst ItemStatusFilter = ({onFilterChange}) => {\r\n\r\n  const buttons = filterButtons.map(({name, label}) => {\r\n\r\n    return (\r\n      <li key={name}\r\n              type=\"button\"\r\n             ><a href=\"#/active\" onClick={() => onFilterChange(name)}>{label} </a></li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n    <ul className=\"filters\">\r\n      { buttons }\r\n    </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemStatusFilter;\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\nimport ItemStatusFilter from '../item-status-filter/item-status-filter';\r\n\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ items, onToggleImportant, onToggleDone, onDelete, onDeleteAll, count, filter, onFilterChange, onEdit }) => {\r\n\r\n  const elements = items.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n    return (\r\n      <li key={id}>\r\n        <TodoListItem\r\n          id = { id }\r\n          { ...itemProps }\r\n          onToggleImportant={ () => onToggleImportant(id) }\r\n          onToggleDone={ () => onToggleDone(id) }\r\n          onDelete={ () => onDelete(id) }  onEdit={ () => onEdit(id) } />\r\n      </li>\r\n    );\r\n  });\r\n  const countTodo = items.length - count(items);\r\n  return (\r\n  <>\r\n  <ul className=\"todo-list\">{ elements }</ul>\r\n  <footer className=\"footer\">\r\n  <span className=\"todo-count\">\r\n          {`${countTodo} items left`}\r\n        </span>\r\n        <ItemStatusFilter\r\n             filter={filter}\r\n            onFilterChange={onFilterChange} />\r\n            <button type=\"button\" className=\"clear-completed\" onClick={onDeleteAll}>\r\n          Clear completed\r\n        </button>\r\n      </footer>\r\n  \r\n            </>);\r\n};\r\n\r\nexport default TodoList;\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;\r\n","import React, { Component } from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n  state = {\r\n    label: ''\r\n  };\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value\r\n    })\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { label } = this.state;\r\n    this.setState({ label: '' });\r\n    const cb = this.props.onItemAdded || (() => {});\r\n    cb(label);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        <h1>todos</h1>\r\n        <form\r\n        onSubmit={this.onSubmit}>\r\n        <input type=\"text\"\r\n          className=\"new-todo\"\r\n          value={this.state.label}\r\n          onChange={this.onLabelChange}\r\n          placeholder=\"What needs to be done?\" />\r\n        </form>\r\n      </header>\r\n      \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport TodoList from './components/todo-list';\r\nimport ItemAddForm from './components/item-add-form';\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n\r\n  state = {\r\n    items: [\r\n      {\r\n        id: 1, label: 'Drink Coffee', done: false,\r\n      },\r\n      {\r\n        id: 2, label: 'Learn React', done: false,\r\n      },\r\n      {\r\n        id: 3, label: 'Make Awesome App', done: false,\r\n      },\r\n    ],\r\n    filter: 'all',\r\n  };\r\n\r\n  onItemAdded = (label) => {\r\n    if (label === '') {\r\n      return;\r\n    }\r\n\r\n    this.setState((state) => {\r\n      const item = this.createItem(label);\r\n\r\n      return { items: [...state.items, item] };\r\n    });\r\n  };\r\n\r\n  toggleProperty = (arr, id, propName) => {\r\n    const idx = arr.findIndex(item => item.id === id);\r\n    const oldItem = arr[idx];\r\n    const value = !oldItem[propName];\r\n\r\n    const item = {\r\n      ...arr[idx], [propName]: value,\r\n    };\r\n\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      item,\r\n      ...arr.slice(idx + 1),\r\n    ];\r\n  };\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState((state) => {\r\n      const items = this.toggleProperty(state.items, id, 'done');\r\n\r\n      return { items };\r\n    });\r\n  };\r\n\r\n  onToggleDoneAll = () => {\r\n    this.setState((state) => {\r\n      let items;\r\n\r\n      if (state.items.every(item => item.done === false)) {\r\n        items = state.items.map((item, i) => ({\r\n          ...item, done: !item.done,\r\n        }));\r\n\r\n        return { items };\r\n      }\r\n\r\n      if (state.items.every(item => item.done === true)) {\r\n        items = state.items.map((item, i) => {\r\n          const value = !item.done;\r\n\r\n          return {\r\n            ...item, done: value,\r\n          };\r\n        });\r\n\r\n        return { items };\r\n      }\r\n\r\n      items = state.items.map((item, i) => {\r\n        let value = item.done;\r\n\r\n        if (value === false) {\r\n          value = true;\r\n        }\r\n\r\n        return {\r\n          ...item, done: value,\r\n        };\r\n      });\r\n\r\n      return { items };\r\n    });\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState((state) => {\r\n      const items = this.toggleProperty(state.items, id, 'important');\r\n\r\n      return { items };\r\n    });\r\n  };\r\n\r\n  onDelete = (id) => {\r\n    this.setState((state) => {\r\n      const idx = state.items.findIndex(item => item.id === id);\r\n      const items = [\r\n        ...state.items.slice(0, idx),\r\n        ...state.items.slice(idx + 1),\r\n      ];\r\n\r\n      return { items };\r\n    });\r\n  };\r\n\r\n  onDeleteAll = () => {\r\n    this.setState((state) => {\r\n      const items = [\r\n        ...state.items.slice(0, 0),\r\n      ];\r\n\r\n      return { items };\r\n    });\r\n  };\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  searchItems(items, search) {\r\n    if (search.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter(item => item.label.toLowerCase().indexOf(search.toLowerCase()) > -1);\r\n  }\r\n\r\n  count(members) {\r\n    return members.filter(item => item.done === true).length;\r\n  }\r\n\r\n  onEdit = (id) => {\r\n    this.setState((state) => {\r\n      const items = this.toggleProperty(state.items,\r\n        id, 'edit');\r\n\r\n      return { items };\r\n    });\r\n  }\r\n\r\n  createItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId + 1,\r\n    };\r\n  }\r\n\r\n  filterItems(items, filter) {\r\n    if (filter === 'active') {\r\n      return items.filter(item => (!item.done));\r\n    }\r\n\r\n    if (filter === 'done') {\r\n      return items.filter(item => item.done);\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  render() {\r\n    const { items, filter } = this.state;\r\n\r\n    const visibleItems = this.filterItems(items, filter);\r\n\r\n    return (\r\n      <section className=\"todoapp\">\r\n        <ItemAddForm\r\n          onItemAdded={this.onItemAdded}\r\n        />\r\n        <section className=\"main\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"toggle-all\"\r\n            className=\"toggle-all\"\r\n            onClick={this.onToggleDoneAll}\r\n          />\r\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n          <TodoList\r\n            onEdit={this.onEdit}\r\n            countTodo={this.countTodo}\r\n            items={visibleItems}\r\n            onToggleImportant={this.onToggleImportant}\r\n            onToggleDone={this.onToggleDone}\r\n            onDelete={this.onDelete}\r\n            onDeleteAll={this.onDeleteAll}\r\n            count={this.count}\r\n            filter={this.state.filter}\r\n            onFilterChange={this.onFilterChange}\r\n          />\r\n        </section>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App.js';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}